{"version":3,"sources":["components/header/Header.jsx","firebase/firebase.utils.js","components/landing/Landing.jsx","components/customerFacilityForm/CustomerFacilityForm.jsx","components/authForm/AuthForm.jsx","components/signin/Signin.jsx","components/signup/Signup.jsx","components/formThankyou/FormThankyou.jsx","components/customerList/CustomerList.jsx","components/getCustomers/GetCustomers.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","React","createElement","className","Link","to","style","cursor","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","async","userAuth","additionalData","userRef","firestore","doc","concat","uid","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","Landing","currentUser","setCurrentUser","useState","unsubscribeFromAuth","useEffect","onAuthStateChanged","onSnapshot","snapShot","id","data","Button","primary","CustomerFacilityForm","name","setName","mobile","setMobile","setEmail","phone","setPhone","address","setAddress","facility","setFacility","errorMsg","setErrorMsg","isDropdownOpen","setDropdownOpen","isSubmitDisabled","setSubmitDisabled","isSubmitLoading","setSubmitLoading","availableFacilities","history","useHistory","margin","Form","onSubmit","e","preventDefault","axios","post","body","push","err","formSubmit","mobileNumber","phoneNumber","toLowerCase","Group","widths","Input","fluid","label","placeholder","required","value","onChange","target","type","TextArea","onClick","map","item","index","key","Message","header","content","loading","disabled","floated","AuthForm","_ref","handleChange","otherProps","Object","assign","SignIn","password","setPassword","event","signInWithEmailAndPassword","positive","marginTop","SignUp","setDisplayName","confirmPassword","setConfirmPassword","user","createUserWithEmailAndPassword","alert","FormThankyou","CustomerList","customers","setCustomers","getFacilityCustomers","renderList","length","customer","_id","List","Item","icon","renderContent","GetCustomers","panes","menuItem","render","Tab","Pane","top","right","signOut","negative","App","Container","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"kZAqBeA,MAhBAA,IAEXC,IAAAC,cAAA,WACED,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAU,mCACbF,IAAAC,cAACE,IAAI,CAACC,GAAG,KACPJ,IAAAC,cAAA,OAAKC,UAAU,OAAOG,MAAO,CAAEC,OAAQ,YAAa,wB,wCCIhEC,IAASC,cAXM,CACbC,OAAQ,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,MAAMC,EAA4BC,MAAOC,EAAUC,KACxD,IAAKD,EAAU,OAEf,MAAME,EAAUC,EAAUC,IAAI,SAADC,OAAUL,EAASM,MAIhD,WAFuBJ,EAAQK,OAEjBC,OAAQ,CACpB,MAAM,YAAEC,EAAW,MAAEC,GAAUV,EACzBW,EAAY,IAAIC,KACtB,UACQV,EAAQW,IAAI,CAChBJ,cACAC,QACAC,eACGV,IAEL,MAAOa,GACPC,QAAQC,IAAI,sBAAuBF,EAAMG,UAI7C,OAAOf,GAGIgB,EAAO9B,IAAS8B,OAChBf,EAAYf,IAASe,YAE5BgB,EAAW,IAAI/B,IAAS8B,KAAKE,mBACnCD,EAASE,oBAAoB,CAAEC,OAAQ,mBAGxBlC,EAAQ,E,OCoCRmC,MA7ECA,KASd,MAAOC,EAAaC,GAAkBC,mBAAS,MAE/C,IAAIC,EAAsB,KA8B1B,OAXAC,oBAAU,KAhBRD,EAAsBT,EAAKW,mBAAmB9B,UACxCC,UACoBF,EAA0BE,IAExC8B,WAAYC,IAClBN,EAAe,CACbO,GAAID,EAASC,MACVD,EAASE,WAKlBR,EAAezB,MAOhB,IAEH4B,oBAAU,IACD,IAAMD,IAEZ,IAEHZ,QAAQC,IAAIQ,GAEV3C,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAU,QAAO,iJAGpBF,IAAAC,cAAA,WACAD,IAAAC,cAAA,WAAM,uHAGND,IAAAC,cAAA,WACAD,IAAAC,cAAA,WAAM,+FAIRD,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACE,IAAI,CAACC,GAAG,kBACPJ,IAAAC,cAACoD,IAAM,CAACC,SAAO,EAACpD,UAAU,eAAc,mBAK5CF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACE,IAAI,CACHC,GAAIuC,EAAc,yBAA2B,oBAE7C3C,IAAAC,cAACoD,IAAM,CAACC,SAAO,EAACpD,UAAU,cAAa,+B,0CCyEpCqD,MA9IcA,KAC3B,MAAOC,EAAMC,GAAWZ,mBAAS,KAC1Ba,EAAQC,GAAad,mBAAS,KAC9BhB,EAAO+B,GAAYf,mBAAS,KAC5BgB,EAAOC,GAAYjB,mBAAS,KAC5BkB,EAASC,GAAcnB,mBAAS,KAChCoB,EAAUC,GAAerB,mBAAS,KAClCsB,EAAUC,GAAevB,mBAAS,KAClCwB,EAAgBC,GAAmBzB,oBAAS,IAC5C0B,EAAkBC,GAAqB3B,oBAAS,IAChD4B,EAAiBC,GAAoB7B,oBAAS,GAE/C8B,EAAsB,CAAC,aAAc,QAAS,MAAO,UAErDC,EAAUC,cAiChB,OAJA9B,oBAAU,KACJS,GAAQE,GAAU7B,GAASoC,GAAUO,GAAkB,IAC1D,CAAChB,EAAME,EAAQ7B,EAAOoC,IAGvBjE,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAII,MAAO,CAAEyE,OAAQ,cAAe,yBACpC9E,IAAAC,cAAC8E,IAAI,CAACC,SApBQC,IAChBA,EAAEC,iBAfehE,WACjB,IACEkD,EAAY,IACZM,GAAiB,SACXS,IAAMC,KAAK,eAAgBC,GAEjCX,GAAiB,GACjBE,EAAQU,KAAK,oBACb,MAAOC,GACPnB,EAAYmB,EAAInD,SAChBsC,GAAiB,KAcnBc,CARiB,CACfhC,KAAMA,EACNiC,aAAc/B,EACd7B,MAAOA,EACPkC,QAASA,EACT2B,YAAa7B,EACbI,SAAUA,EAAS0B,iBAYO1D,QAASkC,GACjCnE,IAAAC,cAAC8E,IAAKa,MAAK,CAACC,OAAO,SACjB7F,IAAAC,cAAC8E,IAAKe,MAAK,CACTC,OAAK,EACLC,MAAM,OACNC,YAAY,kBACZC,UAAQ,EACRC,MAAO3C,EACP4C,SAAWnB,GAAMxB,EAAQwB,EAAEoB,OAAOF,SAEpCnG,IAAAC,cAAC8E,IAAKe,MAAK,CACTC,OAAK,EACLC,MAAM,gBACNC,YAAY,2BACZC,UAAQ,EACRC,MAAOzC,EACP0C,SAAWnB,GAAMtB,EAAUsB,EAAEoB,OAAOF,UAGxCnG,IAAAC,cAAC8E,IAAKa,MAAK,CAACC,OAAO,SACjB7F,IAAAC,cAAC8E,IAAKe,MAAK,CACTC,OAAK,EACLC,MAAM,QACNC,YAAY,mBACZK,KAAK,QACLJ,UAAQ,EACRC,MAAOtE,EACPuE,SAAWnB,GAAMrB,EAASqB,EAAEoB,OAAOF,SAErCnG,IAAAC,cAAC8E,IAAKe,MAAK,CACTC,OAAK,EACLC,MAAM,eACNC,YAAY,0BACZE,MAAOtC,EACPuC,SAAWnB,GAAMnB,EAASmB,EAAEoB,OAAOF,UAGvCnG,IAAAC,cAAC8E,IAAKwB,SAAQ,CACZP,MAAM,UACNC,YAAY,qBACZE,MAAOpC,EACPqC,SAAWnB,GAAMjB,EAAWiB,EAAEoB,OAAOF,SASvCnG,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,wBACTF,IAAAC,cAAA,QAAMC,UAAU,YAAW,KAAS,KAE3DF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OACEuG,QAASA,IAAMlC,GAAiBD,GAChCnE,UAAS,kBAAAsB,OAAoByC,EAAW,GAAK,YAE5CA,GAAY,mBAEdI,GACCrE,IAAAC,cAAA,OAAKC,UAAU,iBACO,OAAnByE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB8B,IAAI,CAACC,EAAMC,IAC/B3G,IAAAC,cAAA,OACE2G,IAAKD,EACLH,QAASA,KACPtC,EAAYwC,GACZpC,GAAgB,IAElBpE,UAAU,iBAETwG,MAMX1G,IAAAC,cAAA,YACAD,IAAAC,cAAC4G,IAAO,CAAC5E,OAAK,EAAC6E,OAAO,QAAQC,QAAS5C,IACvCnE,IAAAC,cAAC8E,IAAK1B,OAAM,CACV2D,QAASvC,EACTwC,SAAU1C,EACV2C,QAAQ,QACR5D,SAAO,GACR,a,OCjIM6D,MAPEC,IAAA,IAAC,aAAEC,EAAY,MAAErB,KAAUsB,GAAYF,EAAA,OACtDpH,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAAA,QAAAsH,OAAAC,OAAA,CAAOtH,UAAU,aAAakG,SAAUiB,GAAkBC,IACzDtB,EAAQhG,IAAAC,cAAA,aAAQ+F,GAAiB,O,OC6DvByB,MA1DAA,KACb,MAAO5F,EAAO+B,GAAYf,mBAAS,KAC5B6E,EAAUC,GAAe9E,mBAAS,KAClCsB,EAAUC,GAAevB,mBAAS,IAEnC+B,EAAUC,cAehB,OACE7E,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,MAAIC,UAAU,SAAQ,wCAEtBF,IAAAC,cAAC8E,IAAI,CAAC9C,QAASkC,EAAUa,SAjBR9D,UACnB0G,EAAM1C,iBAEN,UACQ7C,EAAKwF,2BAA2BhG,EAAO6F,GAC7C9D,EAAS,IACT+D,EAAY,IACZ/C,EAAQU,KAAK,0BACb,MAAOrD,GACPmC,EAAYnC,EAAMG,YAShBpC,IAAAC,cAACkH,EAAQ,CACP3D,KAAK,QACL8C,KAAK,QACLe,aAAepC,GAAMrB,EAASqB,EAAEoB,OAAOF,OACvCA,MAAOtE,EACPmE,MAAM,QACNE,UAAQ,IAEVlG,IAAAC,cAACkH,EAAQ,CACP3D,KAAK,WACL8C,KAAK,WACLH,MAAOuB,EACPL,aAAepC,GAAM0C,EAAY1C,EAAEoB,OAAOF,OAC1CH,MAAM,WACNE,UAAQ,IAEVlG,IAAAC,cAAC4G,IAAO,CAAC5E,OAAK,EAAC6E,OAAO,QAAQC,QAAS5C,IACvCnE,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAACoD,IAAM,CAACyE,UAAQ,EAACxB,KAAK,UAAS,aAQnCtG,IAAAC,cAACE,IAAI,CAACC,GAAG,oBACPJ,IAAAC,cAAA,MAAII,MAAO,CAAE0H,UAAW,QAAS,8B,OC+B1BC,MApFAA,KACb,MAAOpG,EAAaqG,GAAkBpF,mBAAS,KACxChB,EAAO+B,GAAYf,mBAAS,KAC5B6E,EAAUC,GAAe9E,mBAAS,KAClCqF,EAAiBC,GAAsBtF,mBAAS,KAChDsB,EAAUC,GAAevB,mBAAS,IAEnC+B,EAAUC,cA6BhB,OACE7E,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,MAAIC,UAAU,SAAQ,wCACtBF,IAAAC,cAAC8E,IAAI,CAAC9C,QAASkC,EAAUjE,UAAU,eAAe8E,SA9BjC9D,UAGnB,GAFA0G,EAAM1C,iBAEFwC,IAAaQ,EAKjB,IACE,MAAM,KAAEE,SAAe/F,EAAKgG,+BAC1BxG,EACA6F,SAGIzG,EAA0BmH,EAAM,CAAExG,gBAExCqG,EAAe,IACfrE,EAAS,IACT+D,EAAY,IACZQ,EAAmB,IAEnBvD,EAAQU,KAAK,0BACb,MAAOrD,GACPmC,EAAYnC,EAAMG,cAnBlBkG,MAAM,2BA2BJtI,IAAAC,cAACkH,EAAQ,CACPb,KAAK,OACL9C,KAAK,cACL2C,MAAOvE,EACPwE,SAAWnB,GAAMgD,EAAehD,EAAEoB,OAAOF,OACzCH,MAAM,eACNE,UAAQ,IAEVlG,IAAAC,cAACkH,EAAQ,CACPb,KAAK,QACL9C,KAAK,QACL2C,MAAOtE,EACPuE,SAAWnB,GAAMrB,EAASqB,EAAEoB,OAAOF,OACnCH,MAAM,QACNE,UAAQ,IAEVlG,IAAAC,cAACkH,EAAQ,CACPb,KAAK,WACL9C,KAAK,WACL2C,MAAOuB,EACPtB,SAAWnB,GAAM0C,EAAY1C,EAAEoB,OAAOF,OACtCH,MAAM,WACNE,UAAQ,IAEVlG,IAAAC,cAACkH,EAAQ,CACPb,KAAK,WACL9C,KAAK,kBACL2C,MAAO+B,EACP9B,SAAWnB,GAAMkD,EAAmBlD,EAAEoB,OAAOF,OAC7CH,MAAM,mBACNE,UAAQ,IAEVlG,IAAAC,cAAC4G,IAAO,CAAC5E,OAAK,EAAC6E,OAAO,QAAQC,QAAS5C,IACvCnE,IAAAC,cAACoD,IAAM,CAACyE,UAAQ,EAACxB,KAAK,UAAS,YAIjCtG,IAAAC,cAACE,IAAI,CAACC,GAAG,oBACPJ,IAAAC,cAAA,MAAIC,UAAU,eAAc,gC,OC/DrBqI,MAlBMA,IAEjBvI,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,8CAEND,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,kDAEND,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACE,IAAI,CAACC,GAAG,KACPJ,IAAAC,cAACoD,IAAM,CAACyE,UAAQ,GAAC,iB,kBCwCZU,MArDMpB,IAAmB,IAAlB,SAAEnD,GAAUmD,EAChC,MAAOqB,EAAWC,GAAgB7F,mBAAS,MAW3CE,oBAAU,KATmB7B,WAC3B,IACE,MAAMuH,QAAkBtD,IAAMzD,IAAI,gBAADF,OAAiByC,IAClDyE,EAAaD,EAAUrF,MACvB,MAAOnB,GACPC,QAAQC,IAAIF,KAKd0G,CAAqB1E,IACpB,CAACA,IAEJ,MAWM2E,EAAaA,KACjB,OAAQH,EAAUI,QAChB,KAAK,EACH,OAAO7I,IAAAC,cAAA,UAAI,wCAAsCgE,GAEnD,QACE,OAAOwE,EAAUhC,IAAKqC,GAElB9I,IAAAC,cAAA,OAAKC,UAAU,OAAO0G,IAAKkC,EAASC,KAClC/I,IAAAC,cAAC+I,IAAI,KACHhJ,IAAAC,cAAC+I,IAAKC,KAAI,CAACC,KAAK,OAAOnC,QAAS+B,EAAStF,OACzCxD,IAAAC,cAAC+I,IAAKC,KAAI,CAACC,KAAK,QAAQnC,QAAS+B,EAASrD,eAC1CzF,IAAAC,cAAC+I,IAAKC,KAAI,CAACC,KAAK,OAAOnC,QAAS+B,EAASjH,QACzC7B,IAAAC,cAAC+I,IAAKC,KAAI,CAACC,KAAK,SAASnC,QAAS+B,EAAS/E,eAUzD,OAAO/D,IAAAC,cAAA,WAAK,IAlCUkJ,MACpB,OAAQV,GAGN,KAAK,KACH,OAAOzI,IAAAC,cAAA,UAAI,cACb,QACE,OAAO2I,MA2BCO,GAAgB,MCajBC,MA5DMA,KACnB,MAAMxE,EAAUC,cAEVwE,EAAQ,CACZ,CACEC,SAAU,cACVC,OAAQA,IACNvJ,IAAAC,cAACuJ,IAAIC,KAAI,KACPzJ,IAAAC,cAACuI,EAAY,CAACvE,SAAS,iBAI7B,CACEqF,SAAU,MACVC,OAAQA,IACNvJ,IAAAC,cAACuJ,IAAIC,KAAI,KACPzJ,IAAAC,cAACuI,EAAY,CAACvE,SAAS,UAI7B,CACEqF,SAAU,SACVC,OAAQA,IACNvJ,IAAAC,cAACuJ,IAAIC,KAAI,KACPzJ,IAAAC,cAACuI,EAAY,CAACvE,SAAS,aAI7B,CACEqF,SAAU,SACVC,OAAQA,IACNvJ,IAAAC,cAACuJ,IAAIC,KAAI,KACPzJ,IAAAC,cAACuI,EAAY,CAACvE,SAAS,aAU/B,OACEjE,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAII,MAAO,CAAEyE,OAAQ,aAAc,sCACnC9E,IAAAC,cAACuJ,IAAG,CAACH,MAAOA,IACZrJ,IAAAC,cAAA,OAAKC,UAAU,oBACbG,MAAO,CACLqJ,IAAK,EACLC,MAAO,SAGT3J,IAAAC,cAACoD,IAAM,CAACmD,QAdEoD,KACdvH,EAAKuH,UACLhF,EAAQU,KAAK,MAYiBuE,UAAQ,GAAC,eC7B5BC,MAlBHA,IAER9J,IAAAC,cAAC8J,IAAS,KACR/J,IAAAC,cAAC+J,IAAa,KACZhK,IAAAC,cAAA,WACED,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAACgK,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAW1H,IACjC1C,IAAAC,cAACgK,IAAK,CAACC,OAAK,EAACC,KAAK,mBAAmBC,UAAW3C,IAChDzH,IAAAC,cAACgK,IAAK,CAACC,OAAK,EAACC,KAAK,mBAAmBC,UAAWpC,IAChDhI,IAAAC,cAACgK,IAAK,CAACC,OAAK,EAACC,KAAK,yBAAyBC,UAAWhB,IACtDpJ,IAAAC,cAACgK,IAAK,CAACC,OAAK,EAACC,KAAK,iBAAiBC,UAAW7G,IAC9CvD,IAAAC,cAACgK,IAAK,CAACC,OAAK,EAACC,KAAK,mBAAmBC,UAAW7B,OCXtC8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCPNC,IAASnB,OAAOvJ,IAAAC,cAAC6J,EAAG,MAAKa,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAKC,IACJA,EAAaC,eAEdC,MAAMlJ,IACLC,QAAQD,MAAMA,EAAMG,a","file":"static/js/main.3f8c60d2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"nav-wrapper light-blue darken-4\">\r\n          <Link to=\"/\">\r\n            <div className=\"name\" style={{ cursor: \"pointer\" }}>\r\n              Facility Booking\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBABKTeRJvjNobw2HYiPpnbn5zfvA4Tl9k\",\r\n  authDomain: \"online-reservation-portal.firebaseapp.com\",\r\n  databaseURL: \"https://online-reservation-portal.firebaseio.com\",\r\n  projectId: \"online-reservation-portal\",\r\n  storageBucket: \"online-reservation-portal.appspot.com\",\r\n  messagingSenderId: \"883504950560\",\r\n  appId: \"1:883504950560:web:111fa770864f1da58a7b45\",\r\n  measurementId: \"G-LZBX5LY3K4\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating user\", error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithRedirect(provider);\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\n\r\nimport \"./Landing.css\";\r\n\r\nconst Landing = () => {\r\n  // constructor() {\r\n  //   super();\r\n\r\n  //   this.state = {\r\n  //     currentUser: null,\r\n  //   };\r\n  // }\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  let unsubscribeFromAuth = null;\r\n\r\n  const isUser = () => {\r\n    unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\r\n      if (userAuth) {\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n\r\n        userRef.onSnapshot((snapShot) => {\r\n          setCurrentUser({\r\n            id: snapShot.id,\r\n            ...snapShot.data(),\r\n          });\r\n        });\r\n      }\r\n\r\n      setCurrentUser(userAuth);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    isUser();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => unsubscribeFromAuth();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  console.log(currentUser);\r\n  return (\r\n    <div>\r\n      <div className=\"text\">\r\n        Facility Booking is an online reservation portal for customers who wants\r\n        different facilities and the providers who are looking for customers.\r\n        <br />\r\n        <br />\r\n        Customers can fill up the form and mention that which type of facility\r\n        they are looking for as we provide facilites.\r\n        <br />\r\n        <br />\r\n        Faccility providers can login to thier to the account and can have thier\r\n        customers details.\r\n      </div>\r\n      <div className=\"display\">\r\n        <div className=\"view\">\r\n          <Link to=\"/customer/form\">\r\n            <Button primary className=\" btn-large \">\r\n              For Customers\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"view\">\r\n          <Link\r\n            to={currentUser ? \"/provider/getcustomers\" : \"/provider/signin\"}\r\n          >\r\n            <Button primary className=\"btn-large \">\r\n              For Facility Providers\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Message } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nconst CustomerFacilityForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [facility, setFacility] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\r\n  const [isSubmitDisabled, setSubmitDisabled] = useState(true);\r\n  const [isSubmitLoading, setSubmitLoading] = useState(false);\r\n\r\n  const availableFacilities = [\"Restaurant\", \"Hotel\", \"Spa\", \"Saloon\"];\r\n\r\n  const history = useHistory();\r\n\r\n  const formSubmit = async (body) => {\r\n    try {\r\n      setErrorMsg(\"\");\r\n      setSubmitLoading(true);\r\n      await axios.post(\"/api/v1/user\", body);\r\n      // alert(\"Form Submitted\");\r\n      setSubmitLoading(false);\r\n      history.push(\"/customer/thanks\");\r\n    } catch (err) {\r\n      setErrorMsg(err.message);\r\n      setSubmitLoading(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userForm = {\r\n      name: name,\r\n      mobileNumber: mobile,\r\n      email: email,\r\n      address: address,\r\n      phoneNumber: phone,\r\n      facility: facility.toLowerCase(),\r\n    };\r\n    formSubmit(userForm);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (name && mobile && email && facility) setSubmitDisabled(false);\r\n  }, [name, mobile, email, facility]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ margin: \" 20px 0px\" }}>Facility Booking Form</h3>\r\n      <Form onSubmit={onSubmit} error={!!errorMsg}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input\r\n            fluid\r\n            label=\"Name\"\r\n            placeholder=\"Enter your name\"\r\n            required\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            label=\"Mobile number\"\r\n            placeholder=\"Enter your mobile number\"\r\n            required\r\n            value={mobile}\r\n            onChange={(e) => setMobile(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input\r\n            fluid\r\n            label=\"Email\"\r\n            placeholder=\"Enter your email\"\r\n            type=\"email\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            label=\"Phone number\"\r\n            placeholder=\"Enter your phone number\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.TextArea\r\n          label=\"Address\"\r\n          placeholder=\"Enter your address\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        />\r\n        {/* <Form.Input\r\n          fluid\r\n          label=\"Facilities\"\r\n          placeholder=\"What type of facility you are looking for...\"\r\n          value={facility}\r\n          onChange={(e) => setFacility(e.target.value)}\r\n        /> */}\r\n        <div className=\"facility-label\">\r\n          Available Facilities <span className=\"required\">*</span>{\" \"}\r\n        </div>\r\n        <div className=\"dropdown\">\r\n          <div\r\n            onClick={() => setDropdownOpen(!isDropdownOpen)}\r\n            className={`dropdown-label ${facility ? \"\" : \"default\"}`}\r\n          >\r\n            {facility || \"Select Facility\"}\r\n          </div>\r\n          {isDropdownOpen && (\r\n            <div className=\"dropdown-body\">\r\n              {availableFacilities?.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={() => {\r\n                    setFacility(item);\r\n                    setDropdownOpen(false);\r\n                  }}\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  {item}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div></div>\r\n        <Message error header=\"Oops!\" content={errorMsg} />\r\n        <Form.Button\r\n          loading={isSubmitLoading}\r\n          disabled={isSubmitDisabled}\r\n          floated=\"right\"\r\n          primary\r\n        >\r\n          Submit\r\n        </Form.Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerFacilityForm;\r\n","import React from \"react\";\r\n\r\nimport \"./AuthForm.css\";\r\n\r\nconst AuthForm = ({ handleChange, label, ...otherProps }) => (\r\n  <div className=\"group\">\r\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\r\n    {label ? <label>{label}</label> : null}\r\n  </div>\r\n);\r\n\r\nexport default AuthForm;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Message, Button } from \"semantic-ui-react\";\r\n\r\nimport AuthForm from \"../authForm/AuthForm\";\r\n\r\nimport { auth } from \"../../firebase/firebase.utils\";\r\n\r\nimport \"./Signin.css\";\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      history.push(\"/provider/getcustomers\");\r\n    } catch (error) {\r\n      setErrorMsg(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h5 className=\"title\">Sign in with your email and password</h5>\r\n\r\n      <Form error={!!errorMsg} onSubmit={handleSubmit}>\r\n        <AuthForm\r\n          name=\"email\"\r\n          type=\"email\"\r\n          handleChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <AuthForm\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          handleChange={(e) => setPassword(e.target.value)}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <Message error header=\"Oops!\" content={errorMsg} />\r\n        <div className=\"buttons\">\r\n          <Button positive type=\"submit\">\r\n            Sign in\r\n          </Button>\r\n          {/* <Button primary onClick={signInWithGoogle}>\r\n            Sign in with Google\r\n          </Button> */}\r\n        </div>\r\n      </Form>\r\n      <Link to=\"/provider/signup\">\r\n        <h6 style={{ marginTop: \"10%\" }}>I do not have a account</h6>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Message, Button } from \"semantic-ui-react\";\r\n\r\nimport AuthForm from \"../authForm/AuthForm\";\r\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\n\r\nimport \"./Signup.css\";\r\n\r\nconst SignUp = () => {\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      await createUserProfileDocument(user, { displayName });\r\n\r\n      setDisplayName(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n\r\n      history.push(\"/provider/getcustomers\");\r\n    } catch (error) {\r\n      setErrorMsg(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <h5 className=\"title\">Sign up with your email and password</h5>\r\n      <Form error={!!errorMsg} className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <AuthForm\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          onChange={(e) => setDisplayName(e.target.value)}\r\n          label=\"Display Name\"\r\n          required\r\n        />\r\n        <AuthForm\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <AuthForm\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <AuthForm\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          label=\"Confirm Password\"\r\n          required\r\n        />\r\n        <Message error header=\"Oops!\" content={errorMsg} />\r\n        <Button positive type=\"submit\">\r\n          SIGN UP\r\n        </Button>\r\n      </Form>\r\n      <Link to=\"/provider/signin\">\r\n        <h6 className=\"bottomRoute\">I already have an account</h6>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./FormThank.css\";\r\n\r\nconst FormThankyou = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"sub\">\r\n        <h3>Thanks for your time to fill up the form.</h3>\r\n      </div>\r\n      <div className=\"sub\">\r\n        <h3>Our facility providers will contact you soon.</h3>\r\n      </div>\r\n      <div className=\"view\">\r\n        <Link to=\"/\">\r\n          <Button positive>Go To Home</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormThankyou;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { List } from \"semantic-ui-react\";\r\n\r\nconst CustomerList = ({ facility }) => {\r\n  const [customers, setCustomers] = useState(null);\r\n\r\n  const getFacilityCustomers = async (facility) => {\r\n    try {\r\n      const customers = await axios.get(`/api/v1/user/${facility}`);\r\n      setCustomers(customers.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFacilityCustomers(facility);\r\n  }, [facility]);\r\n\r\n  const renderContent = () => {\r\n    switch (customers) {\r\n      //   case 0:\r\n      //     return <h2>Loading...</h2>;\r\n      case null:\r\n        return <h4>Loading...</h4>;\r\n      default:\r\n        return renderList();\r\n    }\r\n  };\r\n\r\n  const renderList = () => {\r\n    switch (customers.length) {\r\n      case 0:\r\n        return <h4>There are no customers right now for {facility}</h4>;\r\n\r\n      default:\r\n        return customers.map((customer) => {\r\n          return (\r\n            <div className=\"view\" key={customer._id}>\r\n              <List>\r\n                <List.Item icon=\"user\" content={customer.name} />\r\n                <List.Item icon=\"phone\" content={customer.mobileNumber} />\r\n                <List.Item icon=\"mail\" content={customer.email} />\r\n                <List.Item icon=\"marker\" content={customer.address} />\r\n              </List>\r\n            </div>\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  //   console.log(\"state \", customers);\r\n\r\n  return <div> {renderContent()} </div>;\r\n};\r\n\r\nexport default CustomerList;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Tab } from \"semantic-ui-react\";\r\n\r\nimport { auth } from \"../../firebase/firebase.utils\";\r\nimport CustomerList from \"../customerList/CustomerList\";\r\n\r\nconst GetCustomers = () => {\r\n  const history = useHistory();\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: \"Restaurants\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <CustomerList facility=\"restaurant\" />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Spa\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <CustomerList facility=\"spa\" />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Saloon\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <CustomerList facility=\"saloon\" />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Hotels\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <CustomerList facility=\"hotel\" />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const signOut = () => {\r\n    auth.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h3 style={{ margin: \"20px 0px\" }}>Customers for different facilities</h3>\r\n      <Tab panes={panes} />\r\n      <div className=\"fixed-action-btn \"\r\n        style={{\r\n          top: 0,\r\n          right: '10px',\r\n        }}\r\n      >\r\n        <Button onClick={signOut} negative>\r\n          Sign Out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomers;\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/header/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport CustomerFacilityForm from \"./components/customerFacilityForm/CustomerFacilityForm\";\r\nimport SignIn from \"./components/signin/Signin\";\r\nimport SignUp from \"./components/signup/Signup\";\r\nimport FormThankyou from \"./components/formThankyou/FormThankyou\";\r\nimport GetCustomers from \"./components/getCustomers/GetCustomers\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <BrowserRouter>\r\n        <div>\r\n          <Header />\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/provider/signin\" component={SignIn} />\r\n          <Route exact path=\"/provider/signup\" component={SignUp} />\r\n          <Route exact path=\"/provider/getcustomers\" component={GetCustomers} />\r\n          <Route exact path=\"/customer/form\" component={CustomerFacilityForm} />\r\n          <Route exact path=\"/customer/thanks\" component={FormThankyou} />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"semantic-ui-css/semantic.min.css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}